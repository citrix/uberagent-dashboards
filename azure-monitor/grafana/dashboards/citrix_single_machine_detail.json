{
  "__inputs": [
    {
      "name": "DS_GRAFANA-AZURE-MONITOR-DATASOURCE",
      "label": "grafana-azure-monitor-datasource",
      "description": "",
      "type": "datasource",
      "pluginId": "grafana-azure-monitor-datasource",
      "pluginName": "Azure Monitor"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.1.4"
    },
    {
      "type": "datasource",
      "id": "grafana-azure-monitor-datasource",
      "name": "Azure Monitor",
      "version": "11.1.4"
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "Citrix-uberAgent"
      ],
      "targetBlank": false,
      "title": "Machine Usage - Single Machine Detail",
      "tooltip": "",
      "type": "dashboards",
      "url": ""
    }
  ],
  "panels": [
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\nlet SystemPerformance = \r\n    uberAgent_System_SystemPerformanceSummary2_CL\r\n    | where Computer == MachineName\r\n    | summarize \r\n        AvgCPURelativeFrequencyPercent = avg(CPURelativeFrequencyPercent_d)\r\n        by Computer;\r\nlet MachineInventory = \r\n    uberAgent_System_MachineInventory_CL \r\n    | where Computer == MachineName\r\n    | sort by TimeGenerated desc\r\n    | take 1\r\n    | project\r\n        Computer, \r\n        LatestCPUCoresLogical = CPUCoresLogical_d,\r\n        HwManufacturer = HwManufacturer_s,\r\n        HwModel = HwModel_s,\r\n        LatestCPUMaxMhz = CPUMaxMhz_d,\r\n        LatestRAMSizeGB = RAMSizeGB_d;\r\nMachineInventory\r\n| join kind=inner (SystemPerformance) on Computer\r\n| extend \r\n    CPUBaseGHz = round(LatestCPUMaxMhz / 1000.0, 2),\r\n    CPUActualGHz = round(LatestCPUMaxMhz / 1000.0 * AvgCPURelativeFrequencyPercent / 100.0, 2)\r\n| project \r\n    Computer,\r\n    HwManufacturer,\r\n    HwModel,\r\n    CPUActualGHz,\r\n    CPUBaseGHz,\r\n    LatestCPUCoresLogical,\r\n    LatestRAMSizeGB",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 2,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\nlet userDetails = \r\n    uberAgent_Session_SessionDetail_CL\r\n    | where Computer == MachineName and SessionUser_s != \"sys\"\r\n    | summarize SessionCount = dcount(SessionGUID_g),\r\n                ForgegroundAppCount = dcount(SessionFgAppId_s),\r\n                UserCount = dcount(SessionUser_s)\r\n      by Computer;\r\nlet logonDetails = uberAgent_Logon_LogonDetail_CL\r\n    | where Computer == MachineName\r\n    | summarize LogonCount = dcount(SessionGUID_g) by Computer;\r\nlet applicationErrors = uberAgent_Application_Errors_CL\r\n    | where Computer == MachineName\r\n    | summarize ErrorCount = count() by Computer;\r\nuserDetails\r\n| join kind=inner (logonDetails) on Computer\r\n| join kind=inner (applicationErrors) on Computer\r\n| project Computer, SessionCount, UserCount, LogonCount, ForgegroundAppCount, ErrorCount",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\nlet systemPerformance = \r\n    uberAgent_System_SystemPerformanceSummary2_CL\r\n    | where Computer == MachineName\r\n    | summarize \r\n        AvgCPUUsagePercent = avg(CPUUsagePercent_d),\r\n        AvgIOPercentDiskTime = avg(IOPercentDiskTime_d),\r\n        AvgRAMUsagePercent = avg(RAMUsagePercent_d),\r\n        AvgNetUtilizationPercent = avg(NetUtilizationPercent_d),\r\n        AvgPagefileUsagePercent = avg(PagefileUsagePercent_d)\r\n        by Computer\r\n    | extend \r\n        AvgCPUUsagePercentRounded = round(AvgCPUUsagePercent, 1),\r\n        AvgIOPercentDiskTimeRounded = round(AvgIOPercentDiskTime, 2),\r\n        AvgRAMUsagePercentRounded = round(AvgRAMUsagePercent, 1),\r\n        AvgNetUtilizationPercentRounded = round(AvgNetUtilizationPercent, 1),\r\n        AvgPagefileUsagePercentRounded = round(AvgPagefileUsagePercent, 1)\r\n    | project Computer, AvgCPUUsagePercentRounded, AvgIOPercentDiskTimeRounded, AvgRAMUsagePercentRounded, AvgNetUtilizationPercentRounded, AvgPagefileUsagePercentRounded;\r\nlet uiDelay = \r\n    uberAgent_Application_UIDelay_CL\r\n    | where Computer == MachineName\r\n    | summarize SumUIDelayMs = sum(UIDelayMs_d) by Computer\r\n    | extend SumUIDelayS = round(SumUIDelayMs / 1000, 1)\r\n    | project Computer, SumUIDelayS;\r\nlet logonDetails = uberAgent_Logon_LogonDetail_CL\r\n| where Computer == MachineName\r\n| summarize \r\n    LogonCount = dcount(SessionGUID_g),\r\n    AvgTotalLogonTimeMs = avg(TotalLogonTimeMs_d)\r\n    by Computer\r\n| extend AvgTotalLogonTimeSRounded = iff(isnull(AvgTotalLogonTimeMs), \"n/a\", tostring(round(AvgTotalLogonTimeMs / 1000.0, 2)))\r\n| project Computer, AvgTotalLogonTimeSRounded;\r\nsystemPerformance\r\n| join kind=inner (uiDelay) on Computer\r\n| join kind=inner (logonDetails) on Computer\r\n| project Computer, AvgCPUUsagePercentRounded, AvgRAMUsagePercentRounded, AvgIOPercentDiskTimeRounded, AvgNetUtilizationPercentRounded, SumUIDelayS, AvgTotalLogonTimeSRounded, AvgPagefileUsagePercentRounded;",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 4,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\nlet sessionData = \r\n    uberAgent_Session_SessionDetail_CL\r\n    | where Computer == MachineName and SessionUser_s != \"sys\"\r\n    | summarize \r\n        User = any(SessionUser_s),                // Assume consistent value per SessionGUID_g\r\n        ID = any(SessionID_d),                    // Assume consistent value per SessionGUID_g\r\n        Protocol = max(SessionProtocol_s),\r\n        LastState = max(SessionConnectionState_s),\r\n        RemotingClients = make_list(SessionClientName_s),\r\n        AvgSessionProcessCount = avg(SessionProcessCount_d),\r\n        AvgSessionCPUUsagePercent = avg(SessionCPUUsagePercent_d),\r\n        AvgSessionIOPS = avg(SessionIOPS_d),\r\n        AvgSessionWorkingSetMB = avg(SessionWorkingSetMB_d),\r\n        AvgSessionNetKBPS = avg(SessionNetKBPS_d),\r\n        AvgSessionRpLatencyMs = avg(SessionRpLatencyMs2_d),\r\n        LastSeen = max(TimeGenerated),\r\n        SessionLogonTime = max(SessionLogonTime_s),\r\n        SumSessionIODurationMs = sum(SessionIOLatencyMs_d),\r\n        SumSessionIOCount = sum(SessionIOCount_d)\r\n    by SessionGUID_g;\r\n\r\nlet logonData = \r\n    uberAgent_Logon_LogonDetail_CL\r\n    | where Computer == MachineName\r\n    | summarize \r\n        TotalLogonTimeMs = sum(TotalLogonTimeMs_d)\r\n    by SessionGUID_g;\r\n\r\nsessionData\r\n| join kind=leftouter (logonData) on SessionGUID_g\r\n| extend \r\n    RemotingClients = strcat_array(RemotingClients, \", \"),\r\n    AvgSessionProcessCount = round(AvgSessionProcessCount, 0),\r\n    AvgSessionCPUUsagePercent = round(AvgSessionCPUUsagePercent, 1),\r\n    AvgSessionIOPS = round(AvgSessionIOPS, 1),\r\n    AvgSessionWorkingSetMB = round(AvgSessionWorkingSetMB, 0),\r\n    AvgSessionNetKBPS = round(AvgSessionNetKBPS, 1),\r\n    AvgSessionRpLatencyMs = round(AvgSessionRpLatencyMs, 1),\r\n    AvgIOLatencyMs = iff(SumSessionIOCount == 0, 0.0, round(toreal(SumSessionIODurationMs) / toreal(SumSessionIOCount), 1)),\r\n    LastSeen = format_datetime(todatetime(LastSeen), \"yyyy-MM-dd HH:mm:ss\"),\r\n    SessionLogonTime = format_datetime(todatetime(SessionLogonTime), \"yyyy-MM-dd HH:mm:ss\"),\r\n    LogonDurationSeconds = round(TotalLogonTimeMs / 1000.0, 2)\r\n| project \r\n    User,\r\n    ID,\r\n    SessionLogonTime,\r\n    LogonDurationSeconds,\r\n    LastSeen,\r\n    LastState,\r\n    Protocol,\r\n    AvgSessionProcessCount,\r\n    AvgSessionCPUUsagePercent,\r\n    AvgSessionIOPS,\r\n    AvgIOLatencyMs,\r\n    AvgSessionWorkingSetMB,\r\n    AvgSessionNetKBPS,\r\n    AvgSessionRpLatencyMs,\r\n    RemotingClients\r\n| order by SessionLogonTime desc\r\n",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Sessions",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Send volume (MB)"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.fillOpacity",
                "value": 50
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Receive volume (MB)"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "custom.fillOpacity",
                "value": 50
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.axisLabel",
                "value": "Data volume (MB)"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Avg. send latency (ms)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 22
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\nlet Process_NetworkTargetPerformance = \r\n    uberAgent_Process_NetworkTargetPerformance_CL \r\n    | where Computer in (MachineName)\r\n    | summarize\r\n        AvgNetTargetSendLatencyMs_d = avg(NetTargetSendLatencyMs_d),\r\n        SumNetTargetSendMB = sum(NetTargetSendMB_d),\r\n        SumNetTargetReceiveMB = sum(NetTargetReceiveMB_d)\r\n    by bin(TimeGenerated, 24h);\r\n\r\nProcess_NetworkTargetPerformance\r\n| extend \r\n    AvgSendLatencyMs = round(AvgNetTargetSendLatencyMs_d, 1)\r\n| project \r\n    TimeGenerated,\r\n    [\"Avg. send latency (ms)\"] = AvgSendLatencyMs, \r\n    [\"Send volume (MB)\"] = SumNetTargetSendMB,\r\n    [\"Receive volume (MB)\"] = SumNetTargetReceiveMB\r\n| sort by TimeGenerated asc \r\n",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Network data volume & latency over time",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Avg. RAM (GB)"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "bars"
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisLabel",
                "value": "RAM (GB)"
              },
              {
                "id": "custom.fillOpacity",
                "value": 50
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "#998000",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Avg. CPU (%)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-orange",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 22
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\nlet System_SystemPerformanceSummary = \r\n    uberAgent_System_SystemPerformanceSummary2_CL\r\n    | where Computer in (MachineName)\r\n    | summarize\r\n        EventCount = count(),\r\n        SumRAMUsageGB = sum(RAMUsageGB_d),\r\n        SumCPUUsagePercent = sum(CPUUsagePercent_d)\r\n    by bin(TimeGenerated, 24h);\r\n\r\nSystem_SystemPerformanceSummary\r\n| extend \r\n    AvgRAMGB = round(SumRAMUsageGB / EventCount, 1),\r\n    AvgCPUPercent = round(SumCPUUsagePercent / EventCount, 1)\r\n| project \r\n    TimeGenerated,\r\n    [\"Avg. CPU (%)\"] = AvgCPUPercent, \r\n    [\"Avg. RAM (GB)\"] = AvgRAMGB\r\n| render columnchart\r\n| sort by TimeGenerated asc \r\n",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "CPU & RAM over time",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 30
      },
      "id": 7,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\n\r\nuberAgent_Process_ProcessDetail_CL\r\n| where Computer in (MachineName)\r\n| summarize\r\n    [\"#Users\"] = dcount(ProcUser_s),\r\n    [\"Process name(s)\"] = makeset(ProcName_s),\r\n    AvgProcCPUPercent = avg(ProcCPUPercent_d),\r\n    AvgProcIOPS = avg(ProcIOPSRead_d + ProcIOPSWrite_d),\r\n    SumProcIOCount = sum(ProcIOReadCount_d + ProcIOWriteCount_d) ,\r\n    SumProcIODurationMs = sum(ProcIOLatencyReadMs2_d * ProcIOReadCount_d + ProcIOLatencyWriteMs2_d * ProcIOWriteCount_d),\r\n    AvgProcWorkingSetMB = avg(ProcWorkingSetMB_d),\r\n    AvgProcNetKBPS = avg(ProcNetKBPS_d)\r\n    by AppId_s\r\n| join kind=leftouter \r\n    (uberAgent_Process_NetworkTargetPerformance_CL\r\n    | where Computer in (MachineName)\r\n    | summarize\r\n        SumNetTargetSendLatencyCount = sum(NetTargetSendLatencyCount_d),\r\n        SumNetTargetSendDurationMs = sum(NetTargetSendLatencyMs_d * NetTargetSendLatencyCount_d)\r\n        by AppId_s)\r\n    on AppId_s\r\n| join kind=leftouter \r\n    (uberAgent_Application_UIDelay_CL\r\n    | where Computer in (MachineName)\r\n    | summarize\r\n        SumUIDelayMs = sum(UIDelayMs_d)\r\n        by AppId_s)\r\n    on AppId_s\r\n\r\n| join kind=leftouter \r\n    (uberAgent_Application_AppNameIdMapping_CL\r\n    | where Computer in (MachineName)\r\n     | summarize\r\n        AppName = any(AppName_s)\r\n        by AppId_s)\r\n    on AppId_s\r\n| extend [\"Avg. CPU (%)\"] = round(AvgProcCPUPercent, 1)\r\n| extend [\"Avg. IOPS\"] = round(AvgProcIOPS, 1)\r\n| extend [\"Avg. IO latency (ms)\"] = round(SumProcIODurationMs / SumProcIOCount, 1)\r\n| extend [\"Avg. RAM (MB)\"] = round(AvgProcWorkingSetMB, 0)\r\n| extend [\"Avg. net thruput (KB/s)\"] = round(AvgProcNetKBPS, 1)\r\n| extend [\"Avg. net latency (ms)\"] = round(SumNetTargetSendDurationMs / SumNetTargetSendLatencyCount, 1)\r\n| extend [\"UI unresponsiveness (s)\"] = round(SumUIDelayMs / 1000, 1)\r\n| project\r\n    AppName,\r\n    [\"Process name(s)\"],\r\n    [\"Avg. CPU (%)\"],\r\n    [\"Avg. IOPS\"],\r\n    [\"Avg. IO latency (ms)\"],\r\n    [\"Avg. RAM (MB)\"],\r\n    [\"Avg. net thruput (KB/s)\"],\r\n    [\"Avg. net latency (ms)\"],\r\n    [\"UI unresponsiveness (s)\"],\r\n    [\"#Users\"]\r\n| sort by AppName asc  ",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": " Applications",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 39
      },
      "id": 8,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\nlet NetworkTargetPerformance = \r\n    uberAgent_Process_NetworkTargetPerformance_CL\r\n    | where Computer == MachineName\r\n    | summarize \r\n        TargetIP = any(NetTargetRemoteAddress_s), \r\n        SumNetTargetSendCount = sum(NetTargetSendCount_d),\r\n        SumNetTargetReceiveCount = sum(NetTargetReceiveCount_d),\r\n        SumNetTargetConnectCount = sum(NetTargetConnectCount_d),\r\n        SumNetTargetReconnectCount = sum(NetTargetReconnectCount_d),\r\n        SumNetTargetRetransmitCount = sum(NetTargetRetransmitCount_d),\r\n        SumNetTargetSendMB = sum(NetTargetSendMB_d),\r\n        SumNetTargetReceiveMB = sum(NetTargetReceiveMB_d),\r\n        SumNetTargetSendLatencyCount = sum(NetTargetSendLatencyCount_d),\r\n        SumNetTargetSendDurationMs = sum(NetTargetSendLatencyMs_d),\r\n        ProcessCount = dcount(ProcName_s),\r\n        UserCount = dcount(ProcUser_s)\r\n    by NetTargetRemotePort_d, NetTargetProtocols_s;\r\n\r\nNetworkTargetPerformance\r\n| extend \r\n    SendCount = round(SumNetTargetSendCount, 0),\r\n    ReceiveCount = round(SumNetTargetReceiveCount, 0),\r\n    ConnectCount = round(SumNetTargetConnectCount, 0),\r\n    ReconnectCount = round(SumNetTargetReconnectCount, 0),\r\n    RetransmitCount = round(SumNetTargetRetransmitCount, 0),\r\n    SendVolumeMB = round(SumNetTargetSendMB, 1),\r\n    ReceiveVolumeMB = round(SumNetTargetReceiveMB, 1),\r\n    AvgSendLatencyMS = iif(SumNetTargetSendLatencyCount > 0, round(SumNetTargetSendDurationMs * 1.0 / SumNetTargetSendLatencyCount, 1), 0.0),\r\n    SortField = tolower(NetTargetRemotePort_d)\r\n| project \r\n    Target = NetTargetRemotePort_d,\r\n    TargetIP,\r\n    Protocols = NetTargetProtocols_s,\r\n    SendCount,\r\n    ReceiveCount,\r\n    ConnectCount,\r\n    ReconnectCount,\r\n    RetransmitCount,\r\n    SendVolumeMB,\r\n    ReceiveVolumeMB,\r\n    AvgSendLatencyMS,\r\n    ProcessCount,\r\n    UserCount,\r\n    SortField\r\n| sort by SortField asc\r\n| project-away SortField",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Network Connections",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 50
      },
      "id": 9,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\nuberAgent_System_Bugcheck_CL\r\n| summarize \r\n    BugcheckTime = max(TimeGenerated),\r\n    StopErrorCode = max(BugcheckCode_d),\r\n    Param1 = max(BugcheckParameter1_s),\r\n    Param2 = max(BugcheckParameter2_s),\r\n    Param3 = max(BugcheckParameter3_s),\r\n    Param4 = max(BugcheckParameter4_s),\r\n    PowerButtonTimestamp = max(PowerButtonTimestampEpoch_d),\r\n    SleepInProgress = max(SleepInProgress_d),\r\n    SystemSleepTransitionsToOn = max(SystemSleepTransitionsToOn_d),\r\n    ConnStandbyInProgress = max(ConnectedStandbyInProgress_d)\r\n    by TimeGenerated, Computer\r\n| where Computer in (MachineName)\r\n| extend \r\n    Time = format_datetime(BugcheckTime, \"yyyy-MM-dd HH:mm:ss\"),\r\n    PowerButtonTimestamp = format_datetime(unixtime_milliseconds_todatetime(PowerButtonTimestamp), \"yyyy-MM-dd HH:mm:ss\"),\r\n    StopErrorCodeHex = strcat(\"0x\", tolower(bin(StopErrorCode, 16)))\r\n| project \r\n    Time,\r\n    Host = Computer,\r\n    StopErrorCodeHex,\r\n    Param1,\r\n    Param2,\r\n    Param3,\r\n    Param4,\r\n    PowerButtonTimestamp,\r\n    SleepInProgress,\r\n    SystemSleepTransitionsToOn,\r\n    ConnStandbyInProgress\r\n| sort by Time desc",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Stop Errors",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-azure-monitor-datasource",
        "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 55
      },
      "id": 10,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "azureLogAnalytics": {
            "dashboardTime": true,
            "query": "let MachineName = '${MachineName}';\r\nlet VolumeInventory = \r\nuberAgent_System_VolumeInventory_CL\r\n    | where Computer in (MachineName) and isnotempty(MountPoints_s)\r\n    | summarize \r\n        IsBootVolume = any(IsBootVolume_b),\r\n        IsDirty = any(IsDirty_b),\r\n        FileSystem = any(FileSystem_s),\r\n        LatestUsedSpacePercent = max(UsedSpacePercent_d),\r\n        LatestFreeMB = max(FreeMB_d),\r\n        CapacityMB = any(CapacityMB_d),\r\n        PartitionStyle = any(PartitionStyle_s)\r\n    by Computer, MountPoints_s, DiskNumbers_s;\r\n\r\nlet VolumeCalculations = \r\n    VolumeInventory\r\n    | extend \r\n        FreeSpaceGB = round(LatestFreeMB / 1024, 1),\r\n        FreeSpacePercent = round(100 - LatestUsedSpacePercent, 1),\r\n        UsedSpaceGB = round(CapacityMB * LatestUsedSpacePercent / 100 / 1024, 1)\r\n    | project \r\n        Computer,\r\n        Path = MountPoints_s,\r\n        FreeSpaceGB,\r\n        UsedSpaceGB,\r\n        FreeSpacePercent,\r\n        FileSystem,\r\n        PartitionStyle,\r\n        IsBootVolume,\r\n        IsDirty,\r\n        DiskNumber = toint(DiskNumbers_s);\r\n\r\n\r\nlet DiskInventory = \r\n    uberAgent_System_DiskInventory_CL\r\n    | where Computer in (MachineName)\r\n    | summarize \r\n        DeviceName = any(Name_s),\r\n        IsRemovable = any(IsRemovable_b),\r\n        IsWritable = any(IsWritable_b)\r\n    by Computer, DiskNumber_d\r\n    | extend DiskNumber = toint(DiskNumber_d)\r\n    | project \r\n        Computer, \r\n        DiskNumber, \r\n        DeviceName, \r\n        IsRemovable, \r\n        IsWritable;\r\n\r\n\r\nVolumeCalculations\r\n| join kind=leftouter  (\r\n    DiskInventory\r\n    | project \r\n        Computer,\r\n        DiskNumber,\r\n        DeviceName,\r\n        IsRemovable,\r\n        IsWritable\r\n) on Computer, DiskNumber\r\n| project \r\n    Host= Computer,\r\n    Path,\r\n    FreeSpaceGB,\r\n    UsedSpaceGB,\r\n    FreeSpacePercent,\r\n    DeviceName,\r\n    FileSystem,\r\n    PartitionStyle,\r\n    IsBootVolume,\r\n    Chkdsk_req = IsDirty,\r\n    IsRemovable,\r\n    IsWritable\r\n| order by Host, Path\r\n\r\n",
            "resources": [
              "$Workspace"
            ],
            "resultFormat": "logs",
            "timeColumn": "TimeGenerated"
          },
          "datasource": {
            "type": "grafana-azure-monitor-datasource",
            "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A"
        }
      ],
      "title": "Disk Space",
      "type": "table"
    }
  ],
  "schemaVersion": 39,
  "tags": [
    "Citrix-uberAgent"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "grafana-azure-monitor-datasource",
          "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
        },
        "definition": "",
        "hide": 0,
        "includeAll": false,
        "label": "Machine Name",
        "multi": false,
        "name": "MachineName",
        "options": [],
        "query": {
          "azureLogAnalytics": {
            "query": "uberAgent_Session_SessionDetail_CL \r\n| project Computer",
            "resources": [
              "/subscriptions/6acb58f7-163b-48ff-b133-8c258b4f14da/resourceGroups/KRS-RG1/providers/Microsoft.OperationalInsights/workspaces/uberAgentWS"
            ]
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "6acb58f7-163b-48ff-b133-8c258b4f14da"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-azure-monitor-datasource",
          "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
        },
        "definition": "",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "Subscription",
        "options": [],
        "query": {
          "azureLogAnalytics": {
            "query": "",
            "resources": []
          },
          "queryType": "Azure Subscriptions",
          "refId": "A"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-azure-monitor-datasource",
          "uid": "${DS_GRAFANA-AZURE-MONITOR-DATASOURCE}"
        },
        "definition": "",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "Workspace",
        "options": [],
        "query": {
          "azureLogAnalytics": {
            "query": "",
            "resources": []
          },
          "queryType": "Azure Workspaces",
          "refId": "A",
          "subscription": "$Subscription"
        },
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Machine Usage - Single Machine Detail",
  "uid": "bdwuzhx8er85ce",
  "version": 70,
  "weekStart": ""
}